#include <iostream>
#include <vector>
using namespace std;

void longestCommonSubstring(string s1, string s2) {
    int m = s1.length();
    int n = s2.length();

    
    vector<vector<int>> table(m + 1, vector<int>(n + 1, 0));

    int maxLength = 0; 
    int endIndex = 0; 

    
    for (int i = 1; i <= m; i++) {
        for (int j = 1; j <= n; j++) {
            if (s1[i - 1] == s2[j - 1]) {
                table[i][j] = table[i - 1][j - 1] + 1;
                if (table[i][j] > maxLength) {
                    maxLength = table[i][j];
                    endIndex = i - 1;
                }
            } else {
                table[i][j] = 0;
            }
        }
    }

    
    string longestSubstring = s1.substr(endIndex - maxLength + 1, maxLength);

    
    cout << "Lookup Table:\n";
    for (int i = 0; i <= m; i++) {
        for (int j = 0; j <= n; j++) {
            cout << table[i][j] << " ";
        }
        cout << endl;
    }

    cout << "Longest Common Substring: " << longestSubstring << endl;
}

int main() {
    string s1, s2;
    cout << "Enter first string: ";
    cin >> s1;
    cout << "Enter second string: ";
    cin >> s2;

    longestCommonSubstring(s1, s2);
    return 0;
}
